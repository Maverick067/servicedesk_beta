"use client";

import { useState, useEffect } from "react";
import { toast } from "sonner";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Label } from "@/components/ui/label";
import { Switch } from "@/components/ui/switch";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Loader2 } from "lucide-react";

interface EditUserDialogProps {
  user: {
    id: string;
    name: string | null;
    email: string;
    role: "ADMIN" | "TENANT_ADMIN" | "AGENT" | "USER";
    isActive: boolean;
  };
  children: React.ReactNode;
  onUserUpdated?: () => void;
}

const roleLabels = {
  ADMIN: "–ì–ª–æ–±–∞–ª—å–Ω—ã–π –∞–¥–º–∏–Ω",
  TENANT_ADMIN: "–ê–¥–º–∏–Ω –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏",
  AGENT: "–ê–≥–µ–Ω—Ç",
  USER: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
};

export function EditUserDialog({ user, children, onUserUpdated }: EditUserDialogProps) {
  const [isOpen, setIsOpen] = useState(false);
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [role, setRole] = useState(user.role);
  const [isActive, setIsActive] = useState(user.isActive);

  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  useEffect(() => {
    setRole(user.role);
    setIsActive(user.isActive);
  }, [user]);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsSubmitting(true);

    try {
      const response = await fetch(`/api/users/${user.id}`, {
        method: "PATCH",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          role,
          isActive,
        }),
      });

      if (!response.ok) {
        const error = await response.json();
        throw new Error(error.error || "Failed to update user");
      }

      toast.success("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω", {
        description: `–†–æ–ª—å: ${roleLabels[role]}, –°—Ç–∞—Ç—É—Å: ${isActive ? "–ê–∫—Ç–∏–≤–µ–Ω" : "–ù–µ–∞–∫—Ç–∏–≤–µ–Ω"}`,
      });

      setIsOpen(false);
      onUserUpdated?.();
    } catch (error: any) {
      toast.error("–û—à–∏–±–∫–∞", {
        description: error.message,
      });
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <Dialog open={isOpen} onOpenChange={setIsOpen}>
      <DialogTrigger asChild>{children}</DialogTrigger>
      <DialogContent className="sm:max-w-[500px]">
        <DialogHeader>
          <DialogTitle>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</DialogTitle>
          <DialogDescription>
            {user.name || user.email}
          </DialogDescription>
        </DialogHeader>

        <form onSubmit={handleSubmit} className="space-y-6 py-4">
          <div className="space-y-4">
            {/* –†–æ–ª—å */}
            <div className="space-y-2">
              <Label htmlFor="role">–†–æ–ª—å</Label>
              <Select value={role} onValueChange={(value: any) => setRole(value)}>
                <SelectTrigger id="role">
                  <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="USER">üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</SelectItem>
                  <SelectItem value="AGENT">üéß –ê–≥–µ–Ω—Ç</SelectItem>
                  <SelectItem value="TENANT_ADMIN">üë®‚Äçüíº –ê–¥–º–∏–Ω –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏</SelectItem>
                </SelectContent>
              </Select>
              <p className="text-xs text-muted-foreground">
                {role === "USER" && "–ú–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ç–∏–∫–µ—Ç—ã –∏ –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å"}
                {role === "AGENT" && "–ú–æ–∂–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ç–∏–∫–µ—Ç—ã"}
                {role === "TENANT_ADMIN" && "–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏"}
              </p>
            </div>

            {/* –°—Ç–∞—Ç—É—Å */}
            <div className="flex items-center justify-between p-4 bg-muted rounded-lg">
              <div className="space-y-0.5">
                <Label htmlFor="isActive">–°—Ç–∞—Ç—É—Å –∞–∫–∫–∞—É–Ω—Ç–∞</Label>
                <p className="text-xs text-muted-foreground">
                  {isActive ? "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤—Ö–æ–¥–∏—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É" : "–í—Ö–æ–¥ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω"}
                </p>
              </div>
              <Switch
                id="isActive"
                checked={isActive}
                onCheckedChange={setIsActive}
              />
            </div>
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ */}
          <div className="flex justify-end gap-3">
            <Button
              type="button"
              variant="outline"
              onClick={() => setIsOpen(false)}
              disabled={isSubmitting}
            >
              –û—Ç–º–µ–Ω–∞
            </Button>
            <Button type="submit" disabled={isSubmitting}>
              {isSubmitting ? (
                <>
                  <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                  –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...
                </>
              ) : (
                "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"
              )}
            </Button>
          </div>
        </form>
      </DialogContent>
    </Dialog>
  );
}

