/**
 * Feature Flags —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–¥—É–ª—è–º–∏ –Ω–∞ —É—Ä–æ–≤–Ω–µ tenant
 */

export type FeatureFlag =
  | "queues"
  | "sla"
  | "knowledge"
  | "automation"
  | "assets"
  | "reports"
  | "webhooks"
  | "ldap"
  | "customFields"
  | "savedFilters";

export interface TenantModules {
  queues?: boolean;
  sla?: boolean;
  knowledge?: boolean;
  automation?: boolean;
  assets?: boolean;
  reports?: boolean;
  webhooks?: boolean;
  ldap?: boolean;
  customFields?: boolean;
  savedFilters?: boolean;
}

export interface TenantSettings {
  ticketPrefix?: string;
  modules?: TenantModules;
  [key: string]: any;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –≤–∫–ª—é—á–µ–Ω –ª–∏ –º–æ–¥—É–ª—å –¥–ª—è tenant
 */
export function isModuleEnabled(
  settings: TenantSettings | null,
  module: FeatureFlag
): boolean {
  if (!settings || !settings.modules) {
    return false;
  }
  return settings.modules[module] === true;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤–∫–ª—é—á–µ–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
 */
export function getEnabledModules(settings: TenantSettings | null): FeatureFlag[] {
  if (!settings || !settings.modules) {
    return [];
  }
  
  return Object.entries(settings.modules)
    .filter(([_, enabled]) => enabled === true)
    .map(([module]) => module as FeatureFlag);
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ–¥—É–ª—è
 */
export function toggleModule(
  settings: TenantSettings | null,
  module: FeatureFlag,
  enabled: boolean
): TenantSettings {
  const currentSettings = settings || { modules: {} };
  
  return {
    ...currentSettings,
    modules: {
      ...currentSettings.modules,
      [module]: enabled,
    },
  };
}

/**
 * –¢–∏–ø—ã –ø–ª–∞–Ω–æ–≤ –ø–æ–¥–ø–∏—Å–∫–∏
 */
export type SubscriptionPlan = "FREE" | "PRO" | "ENTERPRISE";

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∫–∞–∫–∏–µ –º–æ–¥—É–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –Ω–∞ –∫–∞–∫–æ–º –ø–ª–∞–Ω–µ
 */
export const MODULE_PLAN_REQUIREMENTS: Record<FeatureFlag, SubscriptionPlan> = {
  // –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –º–æ–¥—É–ª–∏ (–¥–æ—Å—Ç—É–ø–Ω—ã –Ω–∞ FREE –ø–ª–∞–Ω–µ)
  queues: "FREE",
  reports: "FREE",
  customFields: "FREE",
  savedFilters: "FREE",
  
  // PRO –º–æ–¥—É–ª–∏
  knowledge: "PRO",
  automation: "PRO",
  sla: "PRO",
  
  // ENTERPRISE –º–æ–¥—É–ª–∏
  assets: "ENTERPRISE",
  webhooks: "ENTERPRISE",
  ldap: "ENTERPRISE",
};

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ –º–æ–¥—É–ª—å –Ω–∞ –¥–∞–Ω–Ω–æ–º –ø–ª–∞–Ω–µ
 */
export function isModuleAvailableOnPlan(
  module: FeatureFlag,
  currentPlan: SubscriptionPlan
): boolean {
  const requiredPlan = MODULE_PLAN_REQUIREMENTS[module];
  
  const planHierarchy: Record<SubscriptionPlan, number> = {
    FREE: 0,
    PRO: 1,
    ENTERPRISE: 2,
  };
  
  return planHierarchy[currentPlan] >= planHierarchy[requiredPlan];
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
 */
export function getFreeModules(): FeatureFlag[] {
  return Object.entries(MODULE_PLAN_REQUIREMENTS)
    .filter(([_, plan]) => plan === "FREE")
    .map(([module]) => module as FeatureFlag);
}

/**
 * –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –º–æ–¥—É–ª–µ–π –¥–ª—è UI
 */
export const MODULE_METADATA: Record<
  FeatureFlag,
  {
    name: string;
    description: string;
    icon: string;
    color: string;
    requiredPlan: SubscriptionPlan;
    comingSoon?: boolean;
  }
> = {
  queues: {
    name: "–û—á–µ—Ä–µ–¥–∏",
    description: "–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –∏ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ —Ç–∏–∫–µ—Ç–æ–≤ –ø–æ –æ—á–µ—Ä–µ–¥—è–º",
    icon: "üì•",
    color: "#8b5cf6",
    requiredPlan: "FREE",
  },
  sla: {
    name: "SLA",
    description: "–ö–æ–Ω—Ç—Ä–æ–ª—å –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–≤–µ—Ç–∞ –∏ —Ä–µ—à–µ–Ω–∏—è, —ç—Å–∫–∞–ª–∞—Ü–∏–∏",
    icon: "‚è±Ô∏è",
    color: "#ef4444",
    requiredPlan: "PRO",
  },
  knowledge: {
    name: "–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π",
    description: "–°—Ç–∞—Ç—å–∏, FAQ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
    icon: "üìö",
    color: "#06b6d4",
    requiredPlan: "PRO",
  },
  automation: {
    name: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è",
    description: "–¢—Ä–∏–≥–≥–µ—Ä—ã, –ø—Ä–∞–≤–∏–ª–∞ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è",
    icon: "‚ö°",
    color: "#f59e0b",
    requiredPlan: "PRO",
  },
  assets: {
    name: "CMDB/–ê–∫—Ç–∏–≤—ã",
    description: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ IT-–∞–∫—Ç–∏–≤–∞–º–∏ –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º",
    icon: "üíª",
    color: "#10b981",
    requiredPlan: "ENTERPRISE",
  },
  reports: {
    name: "–û—Ç—á–µ—Ç—ã",
    description: "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞, –≥—Ä–∞—Ñ–∏–∫–∏ –∏ —ç–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö",
    icon: "üìä",
    color: "#6366f1",
    requiredPlan: "FREE",
  },
  webhooks: {
    name: "Webhooks",
    description: "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ HTTP callbacks",
    icon: "üîó",
    color: "#ec4899",
    requiredPlan: "ENTERPRISE",
  },
  ldap: {
    name: "LDAP/SSO",
    description: "–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ LDAP –∏–ª–∏ Single Sign-On",
    icon: "üîê",
    color: "#8b5cf6",
    requiredPlan: "ENTERPRISE",
  },
  customFields: {
    name: "–ö–∞—Å—Ç–æ–º–Ω—ã–µ –ø–æ–ª—è",
    description: "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è —Ç–∏–∫–µ—Ç–æ–≤",
    icon: "üìù",
    color: "#14b8a6",
    requiredPlan: "FREE",
  },
  savedFilters: {
    name: "–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã",
    description: "–ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–º —Ñ–∏–ª—å—Ç—Ä–∞–º",
    icon: "üîç",
    color: "#f97316",
    requiredPlan: "FREE",
  },
};

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –Ω–æ–≤–æ–≥–æ tenant
 */
export function getDefaultTenantSettings(): TenantSettings {
  return {
    ticketPrefix: "TICKET",
    modules: {
      queues: true, // –í–∫–ª—é—á–∞–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      reports: true, // –í–∫–ª—é—á–∞–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      sla: false,
      knowledge: false,
      automation: false,
      assets: false,
      webhooks: false,
      ldap: false,
      customFields: false,
      savedFilters: false,
    },
  };
}

