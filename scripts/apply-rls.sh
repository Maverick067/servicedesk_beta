#!/bin/bash

# ============================================
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è Row-Level Security
# ============================================

set -e

echo "üîê Applying Row-Level Security (RLS) to PostgreSQL..."
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ -z "$DATABASE_URL" ]; then
  echo "‚ùå ERROR: DATABASE_URL environment variable is not set"
  echo "Please set it in .env file or export it:"
  echo "export DATABASE_URL='postgresql://postgres:postgres@localhost:5432/servicedesk'"
  exit 1
fi

# –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–∑ DATABASE_URL
# –§–æ—Ä–º–∞—Ç: postgresql://USER:PASSWORD@HOST:PORT/DATABASE
DB_URL_REGEX='postgresql://([^:]+):([^@]+)@([^:]+):([^/]+)/([^?]+)'

if [[ $DATABASE_URL =~ $DB_URL_REGEX ]]; then
  DB_USER="${BASH_REMATCH[1]}"
  DB_PASSWORD="${BASH_REMATCH[2]}"
  DB_HOST="${BASH_REMATCH[3]}"
  DB_PORT="${BASH_REMATCH[4]}"
  DB_NAME="${BASH_REMATCH[5]}"
else
  echo "‚ùå ERROR: Invalid DATABASE_URL format"
  exit 1
fi

echo "üìä Database connection:"
echo "  Host: $DB_HOST"
echo "  Port: $DB_PORT"
echo "  Database: $DB_NAME"
echo "  User: $DB_USER"
echo ""

# –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
echo "üìù Applying RLS migration..."
PGPASSWORD="$DB_PASSWORD" psql -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" -d "$DB_NAME" -f prisma/migrations/enable_rls.sql

echo ""
echo "‚úÖ RLS successfully applied!"
echo ""
echo "üîç Verifying RLS policies..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ RLS –≤–∫–ª—é—á–µ–Ω
PGPASSWORD="$DB_PASSWORD" psql -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" -d "$DB_NAME" -c "
SELECT 
  schemaname, 
  tablename, 
  rowsecurity 
FROM pg_tables 
WHERE schemaname = 'public' 
  AND tablename IN ('tenants', 'users', 'tickets', 'categories')
ORDER BY tablename;
"

echo ""
echo "‚úÖ RLS is now active!"
echo ""
echo "‚ö†Ô∏è  IMPORTANT: Make sure to restart your Next.js dev server for changes to take effect:"
echo "   bun run dev"
echo ""

